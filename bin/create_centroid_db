#!/usr/bin/env perl

######################################################################
#
# $HeadURL$
# $Author$
# $Revision$
# $Date$
#
# Builds bwa indices of nucleotide centroid sequences for abundance
# measuremnts..
#
######################################################################

use warnings;
use strict;

use Pod::Usage;
use Getopt::Long;
use Carp qw(croak);
use Bio::SeqIO;
use DBI;
use File::Path qw(rmtree);

=pod

=head1 NAME

    create_centroid_db

=head1 SYNOPSIS

    create_centroid_db --db [mysql db name] --out_dir /path/to/output/directory

=head1 DESCRIPTION

    Generates a bowtie2 index for the nucleotide centroid sequences resulting from uclust clustering. Since the clustering is done on the peptide sequences the intial fasta file of nucleotide centroid sequences is extracted from the database, so this script can only be run once the database has been populated with cluster information.

=head1 REQUIRED ARGUMENTS

=over 4

=item B<db>: Name of MySQL database containing cluster information

=item B<out>: Stem of output database name

=back

=back

=head1 AUTHOR - James Abbott

Email j.abbott@imperial.ac.uk

=cut

{
    my $host     = 'bss-srv3.bioinformatics.ic.ac.uk';
    my $port     = '3306';
    my $user     = 'florinash_user';
    my $password = 'tgz0llnV';

	my ($db, $out, $help, $man);
    GetOptions(
                'db=s' => \$db,
		'out=s' => \$out,
                'man'       => \$man,
                'help'      => \$help,
              );

    croak "\nUnknown argument: @ARGV" if "@ARGV";
    pod2usage( verbose => 2 ) if ($man);
    pod2usage( verbose => 1 ) if ( $help || !$db || !$out);


	rmtree $out if (-d $out);
	mkdir $out or croak "Could not create $out: $!";

	print "Generating nucleotide centroid database...\n";

	my $outIO = Bio::SeqIO->new(-file=>">$out/centroids", -format => 'fasta');

    my $dsn = "DBI:mysql:host=$host;port=$port;db=$db";
    my $dbh = DBI->connect( $dsn, $user, $password, { RaiseError => 1 } );

	my $sth = $dbh->prepare("SELECT ClusterID, Cluster.Centroid, NuclSeq FROM Cluster  
		INNER JOIN Prediction on Cluster.Centroid = Prediction.Name", 
		{mysql_user_result => 1});
	$sth->execute();

	while (my ($id, $centroid, $nucl_seq) = ($sth->fetchrow_array())[0..2]) {
		my $seq = Bio::Seq->new(-display_id => $id, seq => $nucl_seq);
		$outIO->write_seq($seq);
	}

	print "Indexing database...\n";
	my $cmd = "bwa index $out/centroids";
	system($cmd) == 0 or croak "Error executing $cmd: $!";

}

