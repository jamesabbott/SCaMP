#!/usr/bin/perl

#######################################################################
#
# $HeadURL$
# $Author$
# $Revision$
# $Date$
#
#######################################################################

use warnings;
use strict;

use DBI;
use Pod::Usage;
use Getopt::Long;
use Carp qw(croak);

=pod

=head1 NAME

    create_florinash_db

=head1 SYNOPSIS

    create_florinash_db --csv_dir /path/to/dir_of_csvs

=head1 DESCRIPTION

    creates a mysql database to store clusters, KO assignments and iprscan results

=head1 REQUIRED ARGUMENTS

=over 4

=item B<csv_dir>: Path to directory of csv files for db load

=back

=head1 AUTHOR - James Abbott

Email j.abbott@imperial.ac.uk

=cut

{

    my $db       = 'florinash_metagenome_proteins_2';
    my $host     = 'bss-srv3.bioinformatics.ic.ac.uk';
    my $port     = '3306';
    my $user     = 'florinash_user';
    my $password = 'tgz0llnV';

    my ( $csv_dir, $help, $man );

    GetOptions(
                'csv_dir=s' => \$csv_dir,
                'man'       => \$man,
                'help'      => \$help,
              );

    croak "\nUnknown argument: @ARGV" if "@ARGV";
    pod2usage( verbose => 2 ) if ($man);
    pod2usage( verbose => 1 ) if ( $help || !$csv_dir );

    my $dsn = "DBI:mysql:host=$host;port=$port";
    my $dbh = DBI->connect( $dsn, $user, $password, { RaiseError => 1 } );

    my $sth = $dbh->prepare("show databases");
    $sth->execute();
  DB: while ( my $server_db = ( $sth->fetchrow_array() )[0] ) {
        if ( $server_db eq $db ) {
            $sth = $dbh->prepare("DROP DATABASE $db");
            $sth->execute();
            print "\n\n$db dropped\n";
            last DB;
        }
    }

    $sth = $dbh->prepare("CREATE DATABASE $db");
    $sth->execute();
    $sth = $dbh->prepare("USE $db");
    $sth->execute();

    $sth = $dbh->prepare(
        "CREATE TABLE Cluster (ClusterID INT NOT NULL, Acc VARCHAR(12), \
	Centroid VARCHAR(30), Members INT NOT NULL, \
	INDEX Centroid_idx(centroid), PRIMARY KEY (ClusterID)) \
	ROW_FORMAT=COMPRESSED, ENGINE=InnoDB"
                        );
    $sth->execute();
	$sth = $dbh->prepare(
	"CREATE TABLE Prediction (PredictionID INT NOT NULL, Centroid VARCHAR(30), \
	Name VARCHAR(30), NuclSequence VARCHAR(150000), NuclLength INT, PepSequence VARCHAR(50000), PepLength INT, \
	Index Centroid_idx(Centroid), Index Name_idx(Name), PRIMARY KEY (PredictionID), \
	FOREIGN KEY (Centroid) REFERENCES Cluster(Centroid), \
	FOREIGN KEY (Name) REFERENCES Cluster(Centroid)) \
	ROW_FORMAT=COMPRESSED, ENGINE=InnoDB"
	);
    $sth->execute();

    $sth = $dbh->prepare(
        "CREATE TABLE GoTerms (GoAcc VARCHAR(10) UNIQUE NOT NULL, \
	Namespace VARCHAR(30), Name VARCHAR(255), Obsolete BOOLEAN, Definition VARCHAR(5000), \
	PRIMARY KEY(GoAcc)) ENGINE=InnoDB"
                        );
    $sth->execute();


    $sth = $dbh->prepare(
        "CREATE TABLE KeggUsearch(\
	KeggUsearchID INT NOT NULL AUTO_INCREMENT, ClusterID INT NOT NULL, \ 
	KeggHit VARCHAR(50), KO VARCHAR(10), Brite VARCHAR(100), GoAcc VARCHAR(10), \ 
	INDEX ClusterID_idx (ClusterID), INDEX GoAcc_idx (GoAcc), \
	FOREIGN KEY (ClusterID) REFERENCES Cluster(ClusterID), \
	FOREIGN KEY (GoAcc) REFERENCES GoTerms(GoAcc) \
	ON DELETE CASCADE, PRIMARY KEY (KeggUsearchID)) ENGINE=InnoDB"
                        );
    $sth->execute();

	$sth = $dbh->prepare(
		"CREATE TABLE KeggPw (\
		KeggPwId VARCHAR(10) NOT NULL, Description VARCHAR(255),
		PRIMARY KEY (KeggPwId)) ENGINE=InnoDB"
	);
	$sth->execute();

    $sth = $dbh->prepare(
        "CREATE TABLE IprscanDomains (IprAcc VARCHAR(10) UNIQUE NOT NULL, \
	Type VARCHAR(10), Name VARCHAR(80), \
	Description VARCHAR(255), PRIMARY KEY(IprAcc)) ENGINE=InnoDB"
                        );
    $sth->execute();

    $sth = $dbh->prepare(
        "CREATE TABLE Cluster_IprscanDomains (ClusterID INT NOT NULL, \
	IprAcc VARCHAR(10) NOT NULL, \
	FOREIGN KEY (ClusterID) REFERENCES Cluster(ClusterID) ON DELETE CASCADE, \
	FOREIGN KEY (IprAcc) REFERENCES IprscanDomains(IprAcc) ON DELETE CASCADE, \
	PRIMARY KEY (ClusterID,IprAcc)) ENGINE=InnoDB"
                        );
    $sth->execute();

    $sth = $dbh->prepare(
        "CREATE TABLE IprscanPw ( \
	PwAcc VARCHAR(30) NOT NULL, DB VARCHAR(15), KeggPwId VARCHAR(10), \
	EC VARCHAR(15), Description VARCHAR(255), \
	FOREIGN KEY (KeggPwId) REFERENCES KeggPw(KeggPwId), \
	PRIMARY KEY (PwAcc)) ENGINE=InnoDB"
                        );
    $sth->execute();

    $sth = $dbh->prepare(
        "CREATE TABLE Cluster_GoTerms (ClusterID INT NOT NULL, \
	GoAcc VARCHAR(10) NOT NULL, Method VARCHAR(20), \
	FOREIGN KEY (ClusterID) REFERENCES Cluster(ClusterID) ON DELETE CASCADE,\
	FOREIGN KEY (GoAcc) REFERENCES GoTerms(GoAcc) ON DELETE CASCADE,\
	PRIMARY KEY (ClusterID,GoAcc)) ENGINE=InnoDB"
                        );
    $sth->execute();

    $sth = $dbh->prepare(
        "CREATE TABLE Cluster_IprscanPw (ClusterID INT NOT NULL, \
	PwAcc VARCHAR(30) NOT NULL, \
	FOREIGN KEY (ClusterID) REFERENCES Cluster(ClusterID) ON DELETE CASCADE, \
	FOREIGN KEY (PwAcc) REFERENCES IprscanPw(PwAcc) ON DELETE CASCADE,\
	PRIMARY KEY (ClusterID,PwAcc)) ENGINE=InnoDB"
                        );
    $sth->execute();

    $sth = $dbh->prepare("INSERT INTO clusters VALUES ('', '',  ?, ?)");
    my $id_sth     = $dbh->prepare("SELECT LAST_INSERT_ID() FROM clusters");
    my $update_sth = $dbh->prepare("UPDATE clusters SET acc = ? WHERE id = ?");

    $sth = $dbh->prepare("SET AUTOCOMMIT=0");
    $sth->execute();
    $sth = $dbh->prepare("SET foreign_key_checks=0");
    $sth->execute();

    foreach my $csv (
                      'Cluster',                'KeggUsearch', 'KeggPw',
                      'IprscanDomains',         'GoTerms',
                      'IprscanPw',              'Cluster_IprscanDomains',
                      'Cluster_GoTerms', 	'Cluster_IprscanPw',
		      'Prediction'
                    )
    {
        print "Loading $csv...\n\n";

        my $infile = $csv_dir . '/' . $csv . ".csv";

        $sth = $dbh->prepare(
                  "LOAD DATA LOCAL INFILE '$infile' INTO TABLE $csv FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' LINES TERMINATED BY '\n'");
        $sth->execute();
        $sth = $dbh->prepare("COMMIT");
        $sth->execute();
    }

    $sth = $dbh->prepare("SET AUTOCOMMIT=1");
    $sth->execute();
    $sth = $dbh->prepare("SET foreign_key_checks=1");
    $sth->execute();

}
