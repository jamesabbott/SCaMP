#!/usr/bin/perl

######################################################################
#
# $HeadURL$
# $Author$
# $Revision$
# $Date$
#
######################################################################
=pod

=head1 NAME

    summarise_reports

=head1 SYNOPSIS

    summarise_reports --out filename [--help][--man]

=head1 DESCRIPTION

    Generates a summary spreadsheet from the per-sample alignment/filtering
    reports generated by align_reads. Each per-sample report is added as a separate
    tab to the generated spreadsheet.

    Currently is hard-coded to use /data/florinash, with trimmed sequences in 'trimmed' and 
    filtered read output in 'filtered'

=head1 REQUIRED ARGUMENTS

=over 4

=item B<out>: Name of output file

=back

=head1 AUTHOR - James Abbott

Email j.abbott@imperial.ac.uk

=cut

use warnings;
use strict;

use Getopt::Long;
use Pod::Usage;
use File::Find::Rule;
use File::Basename;
use Excel::Writer::XLSX;
use Carp qw(croak);

{

    my ( $in_dir, $out,$help, $man );
    GetOptions(
                'out=s' => \$out,
                'help'     => \$help,
                'man'      => \$man,
              );

    croak "\nUnknown argument: @ARGV" if "@ARGV";
    pod2usage( verbose => 2 ) if ($man);
    pod2usage( verbose => 1 )
      if ( $help || !$out );

    my $dir = "/data/florinash/";
    my $fastq_dir = "trimmed";
    my @filter_dirs = qw(human parasites viral plants);

    opendir FASTQ, "$dir$fastq_dir" or die "Error opening $dir$fastq_dir: $!";
    my @samples = grep !/\.\.?\z/, readdir FASTQ;
    close FASTQ;
    
    my $workbook = Excel::Writer::XLSX->new($out);
    my $bold = $workbook->add_format();
    $bold->set_bold();
    my $heading = $workbook->add_format();
    $heading->set_bold();
    $heading->set_size(14);
 
    foreach my $sample(sort {$a cmp $b} @samples) {

	print "Processing $sample...\n";

	my $sheet = $workbook->add_worksheet($sample);
	my $head_row = 3;
	my $body_row=6;
	
	my $fastq_file = (File::Find::Rule->file()->name("*R1.fastq.gz")->in("$dir/$fastq_dir/$sample"))[0];
	my $read_count = `echo  \$((\`zcat $fastq_file|wc -l\`/4))`;
	
	$sheet->write(0,0, "Sample $sample", $heading);
	$sheet->write(1,0, "Unaligned trimmed read-pairs", $bold);
	$sheet->write(1,1, $read_count);
	
	foreach my $filter(@filter_dirs) {
	if (-e "$dir/filtered/$filter/$sample/$sample.$filter.mapping_report.txt") {
	    open REPORT, "$dir/filtered/$filter/$sample/$sample.$filter.mapping_report.txt" or die "Error opening $dir/filtered/$filter/$sample/$sample.$filter.mapping_report.txt: $!";
	    if ($filter eq 'human') {
		my $filtered;
		while (my $line=<REPORT>) {
		    $filtered=$1 if ($line=~/Filtered Reads: ([0-9]+)/);
		}
		$sheet->write(2,0, "Human filtered reads", $bold);
		$sheet->write(2,1, $filtered);
		$sheet->write(2,2, sprintf("%.2f%%", (($filtered/2)/$read_count)*100));
	    } else {
		$sheet->write(++$body_row, 0, "$filter taxonomic breakdown", $heading);
		$sheet->write(++$body_row, 0, "NCBI Tax ID", $bold);
		$sheet->write($body_row, 1, "Species", $bold);
		$sheet->write($body_row, 2, "Aligned read-pairs", $bold);
		$sheet->write($body_row, 3, "Aligned read-pairs (%)", $bold);
		$body_row++;

		LINE: while (my $line=<REPORT>) {
		    if ($line=~/Filtered Reads: ([0-9]+)/) {
			my $filtered = $1;
			$sheet->write($head_row, 0, "$filter filtered read pairs", $bold);
			$sheet->write($head_row, 1, $filtered);
			$sheet->write($head_row,2, sprintf('%.2f%%', (($filtered/2)/$read_count)*100));
			$head_row++;
		    };
		    if ($line=~/^##Tax ID/) {
			while ($line=<REPORT>) {
			    last LINE if ($line eq "\n");
			    my @fields = split(/\t/,$line);
			    $sheet->write($body_row,0,$fields[0]);
			    $sheet->write($body_row,1,$fields[1]);
			    $sheet->write($body_row,2,$fields[2]);
			    $sheet->write($body_row,3, sprintf('%.2f%%', (($fields[2]/2)/$read_count)*100));
			    $body_row++;
			}
		    }
		}

	    }		
			
	    }
	    close REPORT;
	    
	
    }
}
    $workbook->close;
    exit;

}
